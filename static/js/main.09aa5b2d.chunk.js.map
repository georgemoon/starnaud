{"version":3,"sources":["components/helpers/Loader.js","components/helpers/RenderParameter.js","components/fields/AirTemp.js","components/fields/Humidity.js","components/fields/LastLogTime.js","components/fields/Rain.js","components/fields/Wind.js","components/WeatherDisplay.js","components/Webcams.js","App.js","serviceWorker.js","index.js"],"names":["Loader","props","react_default","a","createElement","className","RenderParameter","trend","_this$props","this","parameter","type","isCurrent","classNames","small","push","join","units","renderTrend","Component","defaultProps","AirTemp","_ref","data","components_helpers_RenderParameter","Humidity","LastLogTime","timeDecoded","decodeURIComponent","time","value","moment","utc","local","format","RainDaily","RainHourly","_ref2","WindDir","degrees","cardinalMarks","name","lower","upper","compass","key","Wind","WindSpeed","Wind_WindDir","WindGust","WeatherDisplay","weatherFetch","pending","components_helpers_Loader","rejected","fulfilled","weatherData","fields_LastLogTime","components_fields_AirTemp","fields_Humidity","components_fields_Wind","Rain_RainHourly","Rain_RainDaily","href","connect","TasmanWebcamDisplay","src","alt","NZTAWebcamDisplay","App","src_components_WeatherDisplay","Webcams_TasmanWebcamDisplay","Webcams_NZTAWebcamDisplay","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09aa5b2d.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Loader.css\";\n\nconst Loader = props => {\n  return <div className=\"Loader\" />;\n};\n\nexport default Loader;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./RenderParameter.css\";\n\nclass RenderParameter extends Component {\n  renderTrend(trend) {\n    switch (trend) {\n      case -1:\n        return \"↓\";\n      case 0:\n        return \"–\";\n      case 1:\n        return \"↑\";\n      default:\n        return \"\";\n    }\n  }\n\n  render() {\n    const { parameter, type, small } = this.props;\n\n    const isCurrent = type === \"current\" ? true : false;\n\n    var classNames = [\"parameter\", type];\n    if (small) classNames.push(\"small\");\n\n    return (\n      <span className={classNames.join(\" \")}>\n        <span className=\"value\">\n          {isCurrent ? parameter[\"value\"] : parameter[type]}\n        </span>\n        <span className=\"units\">{parameter.units}</span>\n        {isCurrent && (\n          <span className=\"trend\">{this.renderTrend(parameter.trend)}</span>\n        )}\n      </span>\n    );\n  }\n}\n\nRenderParameter.propTypes = {\n  parameter: PropTypes.shape({\n    max: PropTypes.number.isRequired,\n    min: PropTypes.number.isRequired,\n    trend: PropTypes.number.isRequired,\n    units: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  }),\n  type: PropTypes.string.isRequired,\n  small: PropTypes.bool.isRequired\n};\n\nRenderParameter.defaultProps = {\n  type: \"current\",\n  small: false\n};\n\nexport default RenderParameter;\n","import React from \"react\";\n\nimport RenderParameter from \"../helpers/RenderParameter\";\n\nimport \"./AirTemp.css\";\n\nconst AirTemp = ({ data }) => {\n  const parameter = data.AirTemp;\n\n  return (\n    <div className=\"AirTemp row align-items-center\">\n      <div className=\"col-4\">\n        <RenderParameter parameter={parameter} type=\"min\" />\n      </div>\n      <div className=\"col-4\">\n        <RenderParameter parameter={parameter} />\n      </div>\n      <div className=\"col-4\">\n        <RenderParameter parameter={parameter} type=\"max\" />\n      </div>\n    </div>\n  );\n};\n\nexport default AirTemp;\n","import React from \"react\";\n\nimport RenderParameter from \"../helpers/RenderParameter\";\n\nconst Humidity = ({ data }) => {\n  const parameter = data.Humidity;\n\n  return (\n    <div className=\"Humidity row align-items-center\">\n      <div className=\"col-4\">\n        <RenderParameter parameter={parameter} type=\"min\" />\n      </div>\n      <div className=\"col-4\">\n        <RenderParameter parameter={parameter} />\n      </div>\n      <div className=\"col-4\">\n        <RenderParameter parameter={parameter} type=\"max\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Humidity;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst LastLogTime = ({ data }) => {\n  const timeDecoded = decodeURIComponent(data.LastLogTime.time);\n  const value = moment\n    .utc(timeDecoded, \"YYYY-MM-DD+HH:mm:ss\")\n    .local()\n    .format(\"DD MMMM, h:mm a\");\n\n  return <span className=\"LastLogTime\">{value}</span>;\n};\n\nexport default LastLogTime;\n","import React from \"react\";\n\nimport RenderParameter from \"../helpers/RenderParameter\";\n\nexport const RainDaily = ({ data }) => {\n  const parameter = data.RainDaily;\n\n  return <RenderParameter parameter={parameter} />;\n};\n\nexport const RainHourly = ({ data }) => {\n  const parameter = data.RainHourly;\n\n  return (\n    <div className=\"RainHourly row align-items-center\">\n      <div className=\"col-4\">\n        <RenderParameter parameter={parameter} type=\"min\" />\n      </div>\n      <div className=\"col-4\">\n        <RenderParameter parameter={parameter} />\n      </div>\n      <div className=\"col-4\">\n        <RenderParameter parameter={parameter} type=\"max\" />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport RenderParameter from \"../helpers/RenderParameter\";\n\nimport \"./Wind.css\";\n\n/**\n  Converts a direction in degrees [0 ... 360] to cardinal mark\n */\nconst WindDir = ({ data }) => {\n  var degrees = data.WindDir.value;\n\n  while (degrees < 0) {\n    degrees += 360;\n  }\n  while (degrees >= 360) {\n    degrees -= 360;\n  }\n\n  var cardinalMarks = [\n    { name: \"N\", lower: 0.0, upper: 11.25 },\n    { name: \"NNE\", lower: 11.25, upper: 33.75 },\n    { name: \"NE\", lower: 33.75, upper: 56.25 },\n    { name: \"ENE\", lower: 56.25, upper: 78.75 },\n    { name: \"E\", lower: 78.75, upper: 101.25 },\n    { name: \"ESE\", lower: 101.25, upper: 123.75 },\n    { name: \"SE\", lower: 123.75, upper: 146.25 },\n    { name: \"SSE\", lower: 146.25, upper: 168.75 },\n    { name: \"S\", lower: 168.75, upper: 191.25 },\n    { name: \"SSW\", lower: 191.25, upper: 213.75 },\n    { name: \"SW\", lower: 213.75, upper: 236.25 },\n    { name: \"WSW\", lower: 236.25, upper: 258.75 },\n    { name: \"W\", lower: 258.75, upper: 281.25 },\n    { name: \"WNW\", lower: 281.25, upper: 303.75 },\n    { name: \"NW\", lower: 303.75, upper: 326.25 },\n    { name: \"NNW\", lower: 326.25, upper: 348.75 },\n    { name: \"N\", lower: 348.75, upper: 360.0 }\n  ];\n\n  var compass = \"\";\n\n  for (var key in cardinalMarks) {\n    if (\n      degrees >= cardinalMarks[key].lower &&\n      degrees < cardinalMarks[key].upper\n    )\n      compass = cardinalMarks[key].name;\n  }\n\n  return <span className=\"WindDir\">({compass})</span>;\n};\n\nconst Wind = ({ data }) => {\n  return (\n    <div className=\"Wind\">\n      <div className=\"row align-items-center\">\n        <div className=\"col-3\">\n          <RenderParameter parameter={data.WindSpeed} type=\"min\" />\n        </div>\n        <div className=\"col-6\">\n          <RenderParameter parameter={data.WindSpeed} />\n          <WindDir data={data} />\n        </div>\n        <div className=\"col-3\">\n          <RenderParameter parameter={data.WindSpeed} type=\"max\" />\n        </div>\n      </div>\n\n      <RenderParameter parameter={data.WindGust} small />\n    </div>\n  );\n};\n\nexport default Wind;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-refetch\";\n\nimport Loader from \"./helpers/Loader\";\nimport AirTemp from \"./fields/AirTemp\";\nimport Humidity from \"./fields/Humidity\";\nimport LastLogTime from \"./fields/LastLogTime\";\nimport { RainHourly, RainDaily } from \"./fields/Rain\";\nimport Wind from \"./fields/Wind\";\n\nimport \"./WeatherDisplay.css\";\n\nconst WEATHER_URL = `https://live.harvest.com/?hsn=11720&grp=Main&cmd=json`;\n\nclass WeatherDisplay extends Component {\n  render() {\n    const { weatherFetch } = this.props;\n\n    if (weatherFetch.pending) {\n      return <Loader />;\n    } else if (weatherFetch.rejected) {\n      return <span>Error</span>;\n    } else if (weatherFetch.fulfilled) {\n      const weatherData = weatherFetch.value;\n      return (\n        <div className=\"WeatherDisplay\">\n          <div className=\"card text-center\">\n            <div className=\"card-header\">\n              <h2 className=\"card-title m-0\">\n                Current Weather in Saint Arnaud\n              </h2>\n              <p className=\"m-0\">\n                As of <LastLogTime data={weatherData} />\n              </p>\n            </div>\n            <ul className=\"list-group list-group-flush\">\n              <li className=\"list-group-item\">\n                <h3>Temperature</h3>\n                <AirTemp data={weatherData} />\n              </li>\n              <li className=\"list-group-item\">\n                <h3>Relative Humidity</h3>\n                <Humidity data={weatherData} />\n              </li>\n              <li className=\"list-group-item\">\n                <h3>Wind</h3>\n                <Wind data={weatherData} />\n              </li>\n              <li className=\"list-group-item\">\n                <h3>Rain (hourly)</h3>\n                <RainHourly data={weatherData} />\n              </li>\n            </ul>\n          </div>\n          <div className=\"card text-center mt-4\">\n            <div className=\"card-header\">\n              <h2 className=\"card-title my-0\">Past 24 Hours</h2>\n            </div>\n            <ul className=\"list-group list-group-flush\">\n              <li className=\"list-group-item\">\n                <h3>Rain (daily)</h3>\n                <RainDaily data={weatherData} />\n              </li>\n            </ul>\n          </div>\n          <div className=\"card mt-4\">\n            <div className=\"card-body\">\n              <dl className=\"m-0\">\n                <dt>MetService</dt>\n                <dd>\n                  <a href=\"http://www.metservice.com/mountain/nelson-lakes-national-park\">\n                    Nelson Lakes National Park\n                  </a>\n                </dd>\n                <dt>Weather Data</dt>\n                <dd className=\"m-0\">\n                  <a href=\"http://nrfa.harvest.com/w.cgi?hsn=11720\">\n                    Fire and Emergency New Zealand\n                  </a>\n                </dd>\n              </dl>\n            </div>\n          </div>\n        </div>\n      );\n    } else return null;\n  }\n}\n\nexport default connect(props => ({\n  weatherFetch: WEATHER_URL\n}))(WeatherDisplay);\n","import React from \"react\";\n\nexport const TasmanWebcamDisplay = () => {\n  return (\n    <div className=\"TasmanWebcamDisplay\">\n      <div className=\"card\">\n        <h2 className=\"sr-only\">Webcam (Lake)</h2>\n        <img\n          className=\"card-img-top\"\n          src=\"https://snapithd.com/static/lakerotoiti.jpg?width=770\"\n          alt=\"Current view from the Lake Rotoiti webcam\"\n        />\n        <div className=\"card-body\">\n          <p className=\"m-0\">\n            <a href=\"https://encounter.snapithd.com/html5player/iframe_javascript.php?t=t&amp;w=t1bd338151dw41\">\n              Full screen\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const NZTAWebcamDisplay = () => {\n  return (\n    <div className=\"NZTAWebcamDisplay\">\n      <div className=\"card\">\n        <h2 className=\"sr-only\">Webcam (NZTA)</h2>\n        <img\n          className=\"card-img-top\"\n          src=\"https://www.trafficnz.info/camera/647.jpg\"\n          alt=\"Current view from the NZTA traffic webcam\"\n        />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport WeatherDisplay from \"./components/WeatherDisplay\";\nimport { TasmanWebcamDisplay, NZTAWebcamDisplay } from \"./components/Webcams\";\n\nconst App = props => {\n  return (\n    <div className=\"App\">\n      <main>\n        <h1 className=\"sr-only\">Saint Arnaud</h1>\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-7 col-lg-6\">\n              <section className=\"mt-4\">\n                <WeatherDisplay />\n              </section>\n            </div>\n            <div className=\"col-md-5 col-lg-6\">\n              <section className=\"mt-4\">\n                <TasmanWebcamDisplay />\n              </section>\n              <section className=\"mt-4\">\n                <NZTAWebcamDisplay />\n              </section>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./assets/css/custom.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}